{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Loading the data set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>REF_DATE</th>\n",
       "      <th>GEO</th>\n",
       "      <th>DGUID</th>\n",
       "      <th>Commodities</th>\n",
       "      <th>UOM</th>\n",
       "      <th>UOM_ID</th>\n",
       "      <th>SCALAR_FACTOR</th>\n",
       "      <th>SCALAR_ID</th>\n",
       "      <th>VECTOR</th>\n",
       "      <th>COORDINATE</th>\n",
       "      <th>VALUE</th>\n",
       "      <th>STATUS</th>\n",
       "      <th>SYMBOL</th>\n",
       "      <th>TERMINATED</th>\n",
       "      <th>DECIMALS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1956-01</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Beef and veal, fresh or frozen</td>\n",
       "      <td>Index, 1981=100</td>\n",
       "      <td>169</td>\n",
       "      <td>units</td>\n",
       "      <td>0</td>\n",
       "      <td>v85174</td>\n",
       "      <td>1.60</td>\n",
       "      <td>22.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1956-01</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ground beef, hamburger</td>\n",
       "      <td>Index, 1981=100</td>\n",
       "      <td>169</td>\n",
       "      <td>units</td>\n",
       "      <td>0</td>\n",
       "      <td>v85175</td>\n",
       "      <td>1.70</td>\n",
       "      <td>19.7</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1956-01</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Beef, other</td>\n",
       "      <td>Index, 1981=100</td>\n",
       "      <td>169</td>\n",
       "      <td>units</td>\n",
       "      <td>0</td>\n",
       "      <td>v85176</td>\n",
       "      <td>1.80</td>\n",
       "      <td>22.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1956-01</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Veal</td>\n",
       "      <td>Index, 1981=100</td>\n",
       "      <td>169</td>\n",
       "      <td>units</td>\n",
       "      <td>0</td>\n",
       "      <td>v85177</td>\n",
       "      <td>1.90</td>\n",
       "      <td>22.4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1956-01</td>\n",
       "      <td>Canada</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mutton and lamb, fresh or frozen</td>\n",
       "      <td>Index, 1981=100</td>\n",
       "      <td>169</td>\n",
       "      <td>units</td>\n",
       "      <td>0</td>\n",
       "      <td>v85178</td>\n",
       "      <td>1.10</td>\n",
       "      <td>21.4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61183</th>\n",
       "      <td>1990-06</td>\n",
       "      <td>Ontario</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Meat, cured</td>\n",
       "      <td>Index, 1981=100</td>\n",
       "      <td>169</td>\n",
       "      <td>units</td>\n",
       "      <td>0</td>\n",
       "      <td>v85229</td>\n",
       "      <td>4.27</td>\n",
       "      <td>143.3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61184</th>\n",
       "      <td>1990-06</td>\n",
       "      <td>Prairie Region</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Pork, fresh or frozen</td>\n",
       "      <td>Index, 1981=100</td>\n",
       "      <td>169</td>\n",
       "      <td>units</td>\n",
       "      <td>0</td>\n",
       "      <td>v85225</td>\n",
       "      <td>5.11</td>\n",
       "      <td>139.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61185</th>\n",
       "      <td>1990-06</td>\n",
       "      <td>Prairie Region</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Meat, cured</td>\n",
       "      <td>Index, 1981=100</td>\n",
       "      <td>169</td>\n",
       "      <td>units</td>\n",
       "      <td>0</td>\n",
       "      <td>v85230</td>\n",
       "      <td>5.27</td>\n",
       "      <td>150.1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61186</th>\n",
       "      <td>1990-06</td>\n",
       "      <td>British Columbia</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Pork, fresh or frozen</td>\n",
       "      <td>Index, 1981=100</td>\n",
       "      <td>169</td>\n",
       "      <td>units</td>\n",
       "      <td>0</td>\n",
       "      <td>v85226</td>\n",
       "      <td>6.11</td>\n",
       "      <td>NaN</td>\n",
       "      <td>x</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61187</th>\n",
       "      <td>1990-06</td>\n",
       "      <td>British Columbia</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Meat, cured</td>\n",
       "      <td>Index, 1981=100</td>\n",
       "      <td>169</td>\n",
       "      <td>units</td>\n",
       "      <td>0</td>\n",
       "      <td>v85231</td>\n",
       "      <td>6.27</td>\n",
       "      <td>NaN</td>\n",
       "      <td>x</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>61188 rows Ã— 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      REF_DATE               GEO  DGUID                       Commodities  \\\n",
       "0      1956-01            Canada    NaN    Beef and veal, fresh or frozen   \n",
       "1      1956-01            Canada    NaN            Ground beef, hamburger   \n",
       "2      1956-01            Canada    NaN                       Beef, other   \n",
       "3      1956-01            Canada    NaN                              Veal   \n",
       "4      1956-01            Canada    NaN  Mutton and lamb, fresh or frozen   \n",
       "...        ...               ...    ...                               ...   \n",
       "61183  1990-06           Ontario    NaN                       Meat, cured   \n",
       "61184  1990-06    Prairie Region    NaN             Pork, fresh or frozen   \n",
       "61185  1990-06    Prairie Region    NaN                       Meat, cured   \n",
       "61186  1990-06  British Columbia    NaN             Pork, fresh or frozen   \n",
       "61187  1990-06  British Columbia    NaN                       Meat, cured   \n",
       "\n",
       "                   UOM  UOM_ID SCALAR_FACTOR  SCALAR_ID  VECTOR  COORDINATE  \\\n",
       "0      Index, 1981=100     169        units           0  v85174        1.60   \n",
       "1      Index, 1981=100     169        units           0  v85175        1.70   \n",
       "2      Index, 1981=100     169        units           0  v85176        1.80   \n",
       "3      Index, 1981=100     169        units           0  v85177        1.90   \n",
       "4      Index, 1981=100     169        units           0  v85178        1.10   \n",
       "...                ...     ...           ...        ...     ...         ...   \n",
       "61183  Index, 1981=100     169        units           0  v85229        4.27   \n",
       "61184  Index, 1981=100     169        units           0  v85225        5.11   \n",
       "61185  Index, 1981=100     169        units           0  v85230        5.27   \n",
       "61186  Index, 1981=100     169        units           0  v85226        6.11   \n",
       "61187  Index, 1981=100     169        units           0  v85231        6.27   \n",
       "\n",
       "       VALUE STATUS  SYMBOL  TERMINATED  DECIMALS  \n",
       "0       22.2    NaN     NaN         NaN         1  \n",
       "1       19.7    NaN     NaN         NaN         1  \n",
       "2       22.2    NaN     NaN         NaN         1  \n",
       "3       22.4    NaN     NaN         NaN         1  \n",
       "4       21.4    NaN     NaN         NaN         1  \n",
       "...      ...    ...     ...         ...       ...  \n",
       "61183  143.3    NaN     NaN         NaN         1  \n",
       "61184  139.0    NaN     NaN         NaN         1  \n",
       "61185  150.1    NaN     NaN         NaN         1  \n",
       "61186    NaN      x     NaN         NaN         1  \n",
       "61187    NaN      x     NaN         NaN         1  \n",
       "\n",
       "[61188 rows x 15 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data = pd.read_csv('/Users/dypichsophaneat/Downloads/18100156-eng/18100156.csv')\n",
    "display(data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Calculating the shape of the data set"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(61188, 15)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##  The Column names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['REF_DATE', 'GEO', 'DGUID', 'Commodities', 'UOM', 'UOM_ID',\n",
       "       'SCALAR_FACTOR', 'SCALAR_ID', 'VECTOR', 'COORDINATE', 'VALUE', 'STATUS',\n",
       "       'SYMBOL', 'TERMINATED', 'DECIMALS'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data types of each column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.DataFrame(data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "REF_DATE          object\n",
       "GEO               object\n",
       "DGUID            float64\n",
       "Commodities       object\n",
       "UOM               object\n",
       "UOM_ID             int64\n",
       "SCALAR_FACTOR     object\n",
       "SCALAR_ID          int64\n",
       "VECTOR            object\n",
       "COORDINATE       float64\n",
       "VALUE            float64\n",
       "STATUS            object\n",
       "SYMBOL           float64\n",
       "TERMINATED       float64\n",
       "DECIMALS           int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
